- name: Install core packages via brew casks
  community.general.homebrew_cask:
    name: "{{ item }}"
  ignore_errors: yes
  with_items:
    # - 1password
    - datagrip
    - docker
    # - figma
    # - google-chrome
    - iterm2
    - slack
    # - sublime-text
    - visual-studio-code
    # - vlc
    # - tuple

- name: "Install homebrew packages"
  community.general.homebrew:
    name: [
      'autoconf',
      'automake',
      'bfg', # Remove large files or passwords from Git history like git-filter-branch - https://rtyley.github.io/bfg-repo-cleaner/
      'coreutils', #GNU File, Shell, and Text utilities
      'curl',
      'direnv', #Load/unload environment variables based on $PWD - https://direnv.net/
      'fzf', #Command-line fuzzy finder written in Go 
      'gnu-time',
      'gpg',
      # 'htop', #an interactive process viewer
      'imagemagick@6',
      'libtool',
      'libxslt',
      'libyaml',
      'mas', #Mac App Store command line interface
      'openssl' ,
      'pkg-config',
      'rcm', #RC file (dotfile) management - https://thoughtbot.github.io/rcm/rcm.7.html
      'readline',
      'sqlite3',
      'tmux',
      'unixodbc',
      'unzip',
      'vim',
      'watchman',
      'xz',
      'yarn',
      'zlib',
      'zsh',
    ]
    state: present
    update_homebrew: yes

# - name: "Install from Mac app store"
#   shell: mas install {{ item }}
#   with_items:
#     - 497799835 # xcode

- name: Get the path to ZSH
  become: false
  local_action: command which zsh
  register: zsh_path

- name: "Ensure homebrew zsh is in allowed shells"
  lineinfile:
    path: /etc/shells
    line: "{{ zsh_path.stdout }}"
  become: true

- name: Install Oh My ZSH
  shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
  args:
    creates: "/Users/{{ lookup('env', 'USER') }}/.oh-my-zsh"

- name: Set ZSH as the default shell
  shell: chsh -s $(which zsh) {{ lookup('env', 'USER') }}
  become: true

- name: "Create a default ZSH configuration"
  template:
    src: templates/.zshrc.j2
    dest: /Users/{{ lookup('env', 'USER') }}/.zshrc
    owner: "{{ lookup('env', 'USER') }}"
    force: yes

- name: Create a default VSCode configuration
  template:
    src: templates/vscode-settings.json.j2
    dest: /Users/{{ lookup('env', 'USER') }}/Library/Application Support/Code/User/settings.json
    owner: "{{ lookup('env', 'USER') }}"
    force: yes

- name: Create a default VSCode keuybinding configuration
  template:
    src: templates/vscode-keybindings.json.j2
    dest: /Users/{{ lookup('env', 'USER') }}/Library/Application Support/Code/User/keybindings.json
    owner: "{{ lookup('env', 'USER') }}"
    force: yes

# Add something which ensures path is set here
- name: Install VSCode extensions
  shell: code --install-extension {{ item }}
  with_items:
    - bradlc.vscode-tailwindcss
    - clinyong.vscode-css-modules
    - eamodio.gitlens
    - ms-vscode-remote.vscode-remote-extensionpack
    - ms-vscode.vscode-typescript-tslint-plugin
    - msjsdiag.debugger-for-chrome
    - richie5um2.vscode-sort-json
    - Tyriar.sort-lines
    - vscodevim.vim
    - wholroyd.jinja
    - xabikos.javascriptsnippets
    - streetsidesoftware.code-spell-checker
    - fabiospampinato.vscode-todo-plus